# Note that this tileset is contained in the ommaptile tile set
# properties directory referenced in the web.xml file under the
# TileSetDefinitions property.  That's what gets this file read.  The
# ant jar target will package this properties file properly for
# deployment in the war.  You can add more properties files to the
# directoryfor different tile sets.

name=Control_Room

#The rootDir for a TileMill file, using the sql jar file in the classpath, too.
rootDir=jdbc:sqlite:/Volumes/data/tiles/control-room.mbtiles
# Windows version:
#rootDir=jdbc:sqlite:/f:/data/tiles/control-room.mbtiles

# Identifies to the servlet that this tile set needs a different MapTileSet class 
# because it will be looking at a mbtiles file
class=com.bbn.openmap.maptileservlet.MBRasterMapTileSet

# Or, if you like, you can set up a RelayMapTileSet, which will pull
#tiles from one source and cache them on this server for local
#distribution.

#class=com.bbn.openmap.maptileservlet.RelayMapTileSet
#rootDir=http://someserver.com/tileset/{z}/{y}/{x}.png
#localCacheRootDir=/data/tiles/tileset/{z}/{x}/{y}.png
